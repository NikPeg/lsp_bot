from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from keyboards.main_kb import get_main_keyboard
from services.text_manager import get_text
from utils.emoji import add_emoji_to_text
from config import UNKNOWN_COMMAND

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
router = Router()

@router.message()
async def process_main_menu(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ middleware
    user_language = message.data.get('user_language', 'ru')
    text = message.text

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    profile_text = add_emoji_to_text("üë§", get_text(user_language, "profile_button"))
    learning_text = add_emoji_to_text("üìö", get_text(user_language, "learning_center_button"))
    schedule_text = add_emoji_to_text("üìÜ", get_text(user_language, "schedule_button"))
    channel_text = add_emoji_to_text("üì¢", get_text(user_language, "channel_button"))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
    if text == profile_text:
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è (–ª–æ–≥–∏–∫–∞ –±—É–¥–µ—Ç –≤ –¥—Ä—É–≥–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ)
        from handlers.profile import profile_handler
        return await profile_handler(message)

    elif text == learning_text:
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ü–µ–Ω—Ç—Ä–∞ –æ–±—É—á–µ–Ω–∏—è
        from handlers.learning import learning_handler
        return await learning_handler(message)

    elif text == schedule_text:
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        from handlers.schedule import schedule_handler
        return await schedule_handler(message)

    elif text == channel_text:
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–Ω–∞–ª–∞
        from handlers.channel import channel_handler
        return await channel_handler(message)

    else:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
        unknown_command_text = UNKNOWN_COMMAND.get(user_language)
        await message.answer(unknown_command_text)

@router.callback_query(F.data == "back_to_main")
async def back_to_main_callback(callback_query: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ middleware
    user_language = callback_query.data.get('user_language', 'ru')

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    main_menu_text = get_text(user_language, "main_menu_text")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    main_keyboard = get_main_keyboard(user_language)

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback_query.answer()
    await callback_query.message.edit_text(main_menu_text)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    await callback_query.message.answer(
        text=main_menu_text,
        reply_markup=main_keyboard
    )

def setup_main_menu_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    dp.include_router(router)
