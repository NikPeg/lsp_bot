from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from services.text_manager import get_text
from services.file_manager import get_directories, get_files
from utils.emoji import add_emoji_to_text
import os
import hashlib

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ö–µ—à–µ–π –∏ –ø—É—Ç–µ–π
_path_cache = {}

def get_path_id(path: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—É—Ç–∏

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        path (str): –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        str: –ö–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—É—Ç–∏
    """
    # –°–æ–∑–¥–∞–µ–º —Ö–µ—à –ø—É—Ç–∏
    path_hash = hashlib.md5(path.encode()).hexdigest()[:8]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∫—ç—à–µ
    _path_cache[path_hash] = path

    return path_hash

def get_path_by_id(path_id: str) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        path_id (str): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—É—Ç–∏

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        str: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    return _path_cache.get(path_id, "")

async def get_navigation_keyboard(
        language: str,
        current_path: str,
        parent_path: str = None
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        language (str): –ö–æ–¥ —è–∑—ã–∫–∞ (ru, en, ar)
        current_path (str): –¢–µ–∫—É—â–∏–π –ø—É—Ç—å –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
        parent_path (str, optional): –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    # –°–æ–∑–¥–∞–µ–º –±–∏–ª–¥–µ—Ä –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    directories = await get_directories(current_path)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–∏
    for directory in directories:
        dir_path = os.path.join(current_path, directory)
        dir_name = directory

        # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—É—Ç–∏
        dir_path_id = get_path_id(dir_path)

        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        dir_key = f"dir_{dir_name.replace(' ', '_').lower()}"
        dir_text = get_text(language, dir_key, default=dir_name)
        dir_text = add_emoji_to_text("üìÅ", dir_text)

        builder.row(
            InlineKeyboardButton(text=dir_text, callback_data=f"nav:{dir_path_id}")
        )

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    files = await get_files(current_path)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
    for file in files:
        file_path = os.path.join(current_path, file)
        file_name = os.path.splitext(file)[0]  # –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è

        # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É
        file_path_id = get_path_id(file_path)

        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        file_key = f"file_{file_name.replace(' ', '_').lower()}"
        file_text = get_text(language, file_key, default=file)
        file_text = add_emoji_to_text("üìÑ", file_text)

        builder.row(
            InlineKeyboardButton(text=file_text, callback_data=f"dl:{file_path_id}")
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø—É—Ç—å
    if parent_path:
        # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—É—Ç–∏
        parent_path_id = get_path_id(parent_path)

        back_text = add_emoji_to_text("üîô", get_text(language, "back_button"))
        builder.row(
            InlineKeyboardButton(text=back_text, callback_data=f"nav:{parent_path_id}")
        )
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        back_to_main_text = add_emoji_to_text("üè†", get_text(language, "back_to_main_menu"))
        builder.row(
            InlineKeyboardButton(text=back_to_main_text, callback_data="back_to_main")
        )

    return builder.as_markup()
